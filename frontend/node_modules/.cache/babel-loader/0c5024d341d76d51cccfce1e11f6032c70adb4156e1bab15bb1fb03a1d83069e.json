{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shims\\\\Desktop\\\\EMS\\\\frontend\\\\src\\\\pages\\\\Auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleResetPassword = async () => {\n    try {\n      // Simple password validation using regex\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n      if (!passwordRegex.test(password)) {\n        throw new Error('Password must be at least 8 characters long and include 1 capital letter, 1 small letter, and 1 special character.');\n      }\n      if (password !== confirmPassword) {\n        throw new Error('Passwords do not match');\n      }\n      const token = new URLSearchParams(window.location.search).get('token');\n      const response = await fetch('http://localhost:5000/api/areset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          newPassword: password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error resetting password');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      console.error('Error resetting password:', error.message);\n      setMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetPassword,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"qt3PhytPuw5RELHGgvSOEvZef4A=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","handleResetPassword","passwordRegex","test","Error","token","URLSearchParams","window","location","search","get","response","fetch","method","headers","body","JSON","stringify","newPassword","ok","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shims/Desktop/EMS/frontend/src/pages/Auth/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      // Simple password validation using regex\r\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n      if (!passwordRegex.test(password)) {\r\n        throw new Error('Password must be at least 8 characters long and include 1 capital letter, 1 small letter, and 1 special character.');\r\n      }\r\n\r\n      if (password !== confirmPassword) {\r\n        throw new Error('Passwords do not match');\r\n      }\r\n\r\n      const token = new URLSearchParams(window.location.search).get('token');\r\n\r\n      const response = await fetch('http://localhost:5000/api/areset-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token, newPassword: password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error resetting password');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error.message);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reset Password</h1>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Confirm Password:</label>\r\n        <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      </div>\r\n      <button onClick={handleResetPassword}>Reset Password</button>\r\n      <div>{message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
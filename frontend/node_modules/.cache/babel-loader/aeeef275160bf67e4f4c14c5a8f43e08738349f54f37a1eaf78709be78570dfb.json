{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shims\\\\Desktop\\\\EMS\\\\frontend\\\\src\\\\pages\\\\Auth\\\\CreatePassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport logoImage from '../../logo.png';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreatePassword = () => {\n  _s();\n  const {\n    email\n  } = useParams();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [termsChecked, setTermsChecked] = useState(false); // Added state for checkbox\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate passwords\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n\n    // Validate terms and conditions checkbox\n    if (!termsChecked) {\n      setError('Please accept the terms and conditions.');\n      return;\n    }\n\n    // Reset previous error messages\n    setError('');\n    setLoading(true);\n    try {\n      const response = await sendPasswordToServer(email, password);\n      if (response.status === 200) {\n        // Password created successfully, redirect to login page\n        toast.success('Password created successfully! Redirecting to login...');\n        setTimeout(() => {\n          navigate('/auth/login');\n        }, 2000);\n      } else {\n        // Handle specific error cases if needed\n        setError('Error creating password. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending password to server:', error);\n      setError('An unexpected error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const sendPasswordToServer = async (email, password) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/create-password/${email}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      return response;\n    } catch (error) {\n      console.error('Error sending password to server:', error);\n      return {\n        status: 500\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login-container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"logo-EMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"EMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to your HR services portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"form-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"form-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: termsChecked,\n            onChange: () => setTermsChecked(!termsChecked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), \"I accept the \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/terms-and-conditions\",\n            children: \" terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Creating Password...' : 'Create Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CreatePassword, \"FHsCqzMjln7W3j8U5gyItae37t8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CreatePassword;\nexport default CreatePassword;\nvar _c;\n$RefreshReg$(_c, \"CreatePassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Link","ToastContainer","toast","logoImage","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePassword","_s","email","password","setPassword","confirmPassword","setConfirmPassword","termsChecked","setTermsChecked","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","response","sendPasswordToServer","status","success","setTimeout","console","fetch","method","headers","body","JSON","stringify","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","checked","to","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shims/Desktop/EMS/frontend/src/pages/Auth/CreatePassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport logoImage from '../../logo.png';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../auth.css';\r\n\r\nconst CreatePassword = () => {\r\n  const { email } = useParams();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [termsChecked, setTermsChecked] = useState(false); // Added state for checkbox\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate passwords\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    // Validate terms and conditions checkbox\r\n    if (!termsChecked) {\r\n      setError('Please accept the terms and conditions.');\r\n      return;\r\n    }\r\n\r\n    // Reset previous error messages\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await sendPasswordToServer(email, password);\r\n\r\n      if (response.status === 200) {\r\n        // Password created successfully, redirect to login page\r\n        toast.success('Password created successfully! Redirecting to login...');\r\n        setTimeout(() => {\r\n          navigate('/auth/login');\r\n        }, 2000);\r\n      } else {\r\n        // Handle specific error cases if needed\r\n        setError('Error creating password. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending password to server:', error);\r\n      setError('An unexpected error occurred. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendPasswordToServer = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/create-password/${email}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error sending password to server:', error);\r\n      return { status: 500 };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"login-container1\">\r\n        <aside className=\"logo\">\r\n          <img src={logoImage} alt=\"logo-EMS\" />\r\n          <p>EMS</p>\r\n        </aside>\r\n        <h1>Welcome to your HR services portal</h1>\r\n      </section>\r\n      <section className=\"login-container\">\r\n        <h2>Create Your Password</h2>\r\n        <form onSubmit={handleSubmit}>\r\n        <article className=\"form-flex\">\r\n          <label>Password:</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          </article>\r\n          <article className=\"form-flex\">\r\n          <label>Confirm Password:</label>\r\n          <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\r\n          </ article>\r\n          <label>\r\n            <input type=\"checkbox\" checked={termsChecked} onChange={() => setTermsChecked(!termsChecked)} />\r\n            I accept the <Link to=\"/terms-and-conditions\"> terms and conditions</Link>\r\n          </label>\r\n          <br />\r\n\r\n          {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? 'Creating Password...' : 'Create Password'}\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePassword;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAC/D,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACzD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMwB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9B,MAAMuB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIb,QAAQ,KAAKE,eAAe,EAAE;MAChCK,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;;IAEA;IACA,IAAI,CAACH,YAAY,EAAE;MACjBG,QAAQ,CAAC,yCAAyC,CAAC;MACnD;IACF;;IAEA;IACAA,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,oBAAoB,CAAChB,KAAK,EAAEC,QAAQ,CAAC;MAE5D,IAAIc,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAzB,KAAK,CAAC0B,OAAO,CAAC,wDAAwD,CAAC;QACvEC,UAAU,CAAC,MAAM;UACfR,QAAQ,CAAC,aAAa,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACL;QACAH,QAAQ,CAAC,4CAA4C,CAAC;MACxD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDC,QAAQ,CAAC,iDAAiD,CAAC;IAC7D,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMM,oBAAoB,GAAG,MAAAA,CAAOhB,KAAK,EAAEC,QAAQ,KAAK;IACtD,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMM,KAAK,CAAE,6CAA4CrB,KAAM,EAAC,EAAE;QACjFsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEzB;QAAS,CAAC;MACnC,CAAC,CAAC;MAEF,OAAOc,QAAQ;IACjB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,OAAO;QAAEU,MAAM,EAAE;MAAI,CAAC;IACxB;EACF,CAAC;EAED,oBACEtB,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBACEhC,OAAA;MAASiC,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBACnChC,OAAA;QAAOiC,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACrBhC,OAAA;UAAKkC,GAAG,EAAEpC,SAAU;UAACqC,GAAG,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtCvC,OAAA;UAAAgC,QAAA,EAAG;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACRvC,OAAA;QAAAgC,QAAA,EAAI;MAAkC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACVvC,OAAA;MAASiC,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAClChC,OAAA;QAAAgC,QAAA,EAAI;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BvC,OAAA;QAAMwC,QAAQ,EAAEvB,YAAa;QAAAe,QAAA,gBAC7BhC,OAAA;UAASiC,SAAS,EAAC,WAAW;UAAAD,QAAA,gBAC5BhC,OAAA;YAAAgC,QAAA,EAAO;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBvC,OAAA;YAAOyC,IAAI,EAAC,UAAU;YAACC,KAAK,EAAEpC,QAAS;YAACqC,QAAQ,EAAGzB,CAAC,IAAKX,WAAW,CAACW,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;YAACG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC,eACVvC,OAAA;UAASiC,SAAS,EAAC,WAAW;UAAAD,QAAA,gBAC9BhC,OAAA;YAAAgC,QAAA,EAAO;UAAiB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChCvC,OAAA;YAAOyC,IAAI,EAAC,UAAU;YAACC,KAAK,EAAElC,eAAgB;YAACmC,QAAQ,EAAGzB,CAAC,IAAKT,kBAAkB,CAACS,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;YAACG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrG,CAAC,eACXvC,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAOyC,IAAI,EAAC,UAAU;YAACK,OAAO,EAAEpC,YAAa;YAACiC,QAAQ,EAAEA,CAAA,KAAMhC,eAAe,CAAC,CAACD,YAAY;UAAE;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,iBACnF,eAAAvC,OAAA,CAACL,IAAI;YAACoD,EAAE,EAAC,uBAAuB;YAAAf,QAAA,EAAC;UAAqB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,eACRvC,OAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAEL3B,KAAK,iBAAIZ,OAAA;UAAGgD,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAjB,QAAA,EAAEpB;QAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEjDvC,OAAA;UAAQyC,IAAI,EAAC,QAAQ;UAACS,QAAQ,EAAEpC,OAAQ;UAAAkB,QAAA,EACrClB,OAAO,GAAG,sBAAsB,GAAG;QAAiB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACVvC,OAAA,CAACJ,cAAc;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClB,CAAC;AAEP,CAAC;AAACnC,EAAA,CAtGID,cAAc;EAAA,QACAV,SAAS,EAMVC,WAAW;AAAA;AAAAyD,EAAA,GAPxBhD,cAAc;AAwGpB,eAAeA,cAAc;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
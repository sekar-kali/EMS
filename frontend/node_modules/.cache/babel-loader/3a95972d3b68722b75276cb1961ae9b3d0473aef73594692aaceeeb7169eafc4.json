{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shims\\\\Desktop\\\\EMS\\\\frontend\\\\src\\\\pages\\\\Auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport logoImage from '../../logo.png';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    try {\n      // Validate input fields\n      if (!email || !password) {\n        toast.error('Please fill in all fields.');\n        return;\n      }\n\n      // Send a login request to the backend\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Login successful\n        const authToken = data.token;\n\n        // Store the authentication token in localStorage\n        localStorage.setItem('authToken', authToken);\n\n        // Show success toast\n        toast.success('Login successful!');\n\n        // Wait for 2 seconds before navigating\n        setTimeout(() => {\n          // Redirect to the user dashboard based on the user's role\n          if (data.role === 'admin') {\n            navigate('/admin/dashboard');\n          } else if (data.role === 'staff') {\n            navigate('/staff/dashboard');\n          }\n        }, 2000);\n      } else {\n        // Login failed, log the error message\n        console.error('Login failed:', data.message);\n\n        // Show error toast\n        toast.error(`Login failed: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error during login:', error.message);\n      toast.error('Error during login. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"logo-EMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"EMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"3EppOPrTUbqGnofT+5nt0Tjfe+w=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","toast","ToastContainer","logoImage","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","handleLogin","error","response","fetch","method","headers","body","JSON","stringify","data","json","ok","authToken","token","localStorage","setItem","success","setTimeout","role","console","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shims/Desktop/EMS/frontend/src/pages/Auth/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport logoImage from '../../logo.png';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../auth.css';\r\n\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      // Validate input fields\r\n      if (!email || !password) {\r\n        toast.error('Please fill in all fields.');\r\n        return;\r\n      }\r\n  \r\n      // Send a login request to the backend\r\n      const response = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Login successful\r\n        const authToken = data.token;\r\n  \r\n        // Store the authentication token in localStorage\r\n        localStorage.setItem('authToken', authToken);\r\n  \r\n        // Show success toast\r\n        toast.success('Login successful!');\r\n  \r\n        // Wait for 2 seconds before navigating\r\n        setTimeout(() => {\r\n          // Redirect to the user dashboard based on the user's role\r\n          if (data.role === 'admin') {\r\n            navigate('/admin/dashboard');\r\n          } else if (data.role === 'staff') {\r\n            navigate('/staff/dashboard');\r\n          }\r\n        }, 2000);\r\n      } else {\r\n        // Login failed, log the error message\r\n        console.error('Login failed:', data.message);\r\n  \r\n        // Show error toast\r\n        toast.error(`Login failed: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error.message);\r\n      toast.error('Error during login. Please try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"logo\">\r\n                      <img src={logoImage} alt=\"logo-EMS\" />\r\n        <p>EMS</p></div>\r\n      <h2>Login</h2>\r\n      <form>\r\n      <div className=\"form-flex\">\r\n        <label>Email:</label>\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-flex\">\r\n        <label>Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <button type=\"button\" onClick={handleLogin}>\r\n          Login\r\n        </button>\r\n      </form>\r\n\r\n      {/* <p>\r\n        Don't have an account? <Link to=\"/auth/signup\">Sign up</Link>\r\n      </p> */}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
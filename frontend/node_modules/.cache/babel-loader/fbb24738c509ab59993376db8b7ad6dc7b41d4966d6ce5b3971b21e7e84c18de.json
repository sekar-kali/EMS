{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shims\\\\Desktop\\\\EMS\\\\frontend\\\\src\\\\pages\\\\Staff\\\\StaffPersonalInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport MenuStaff from '../../components/MenuStaff';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StaffPersonalInfo = () => {\n  _s();\n  const [staffInfo, setStaffInfo] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    serviceName: ''\n  });\n\n  // State to track modified details\n  const [modifiedDetails, setModifiedDetails] = useState({\n    firstName: '',\n    lastName: '',\n    serviceName: ''\n  });\n  useEffect(() => {\n    // Fetch staff's information\n    const fetchStaffInfo = async () => {\n      try {\n        const response = await fetch('/api/staff/info/:email');\n        if (response.ok) {\n          const staffInfoData = await response.json();\n          setStaffInfo(staffInfoData);\n\n          // Initialize modifiedDetails with current details\n          setModifiedDetails({\n            firstName: staffInfoData.firstName,\n            lastName: staffInfoData.lastName,\n            serviceName: staffInfoData.serviceName\n          });\n        } else {\n          console.error('Error fetching staff information:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching staff information:', error.message);\n      }\n    };\n    fetchStaffInfo();\n  }, []);\n  const handleModifyDetails = () => {\n    // Make a POST request to the server\n    fetch('/api/staff/change-details-request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: staffInfo.email\n      })\n    }).then(response => response.json()).then(data => {\n      toast.success(data.message); // Handle success message\n    }).catch(error => {\n      toast.error('Error updating details:', error.message);\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // Update the modifiedDetails state when input values change\n    setModifiedDetails(prevDetails => ({\n      ...prevDetails,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuStaff, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personal-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Staff Personal Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First Name: \", staffInfo.firstName, ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: modifiedDetails.firstName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Name: \", staffInfo.lastName, ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: modifiedDetails.lastName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", staffInfo.email, ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Service Name: \", staffInfo.serviceName, ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"serviceName\",\n          value: modifiedDetails.serviceName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleModifyDetails,\n        children: \"Request Change in Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StaffPersonalInfo, \"T5VPEWvt62PirutbNT9UYr6K0Xg=\");\n_c = StaffPersonalInfo;\nexport default StaffPersonalInfo;\nvar _c;\n$RefreshReg$(_c, \"StaffPersonalInfo\");","map":{"version":3,"names":["React","useEffect","useState","Header","Footer","MenuStaff","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","StaffPersonalInfo","_s","staffInfo","setStaffInfo","firstName","lastName","email","serviceName","modifiedDetails","setModifiedDetails","fetchStaffInfo","response","fetch","ok","staffInfoData","json","console","error","statusText","message","handleModifyDetails","method","headers","body","JSON","stringify","then","data","success","catch","handleInputChange","e","name","value","target","prevDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shims/Desktop/EMS/frontend/src/pages/Staff/StaffPersonalInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport MenuStaff from '../../components/MenuStaff';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst StaffPersonalInfo = () => {\r\n  const [staffInfo, setStaffInfo] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    serviceName: '',\r\n  });\r\n\r\n  // State to track modified details\r\n  const [modifiedDetails, setModifiedDetails] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    serviceName: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch staff's information\r\n    const fetchStaffInfo = async () => {\r\n      try {\r\n        const response = await fetch('/api/staff/info/:email');\r\n        if (response.ok) {\r\n          const staffInfoData = await response.json();\r\n          setStaffInfo(staffInfoData);\r\n\r\n          // Initialize modifiedDetails with current details\r\n          setModifiedDetails({\r\n            firstName: staffInfoData.firstName,\r\n            lastName: staffInfoData.lastName,\r\n            serviceName: staffInfoData.serviceName,\r\n          });\r\n        } else {\r\n          console.error('Error fetching staff information:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching staff information:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchStaffInfo();\r\n  }, []);\r\n\r\n  const handleModifyDetails = () => {\r\n    // Make a POST request to the server\r\n    fetch('/api/staff/change-details-request', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: staffInfo.email,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        toast.success(data.message); // Handle success message\r\n      })\r\n      .catch((error) => {\r\n        toast.error('Error updating details:', error.message);\r\n      });\r\n  };\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // Update the modifiedDetails state when input values change\r\n    setModifiedDetails((prevDetails) => ({\r\n      ...prevDetails,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <MenuStaff />\r\n      <div className=\"personal-info\">\r\n        <h1>Staff Personal Information</h1>\r\n        <p>\r\n          First Name: {staffInfo.firstName}{' '}\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            value={modifiedDetails.firstName}\r\n            onChange={handleInputChange}\r\n          />\r\n        </p>\r\n        <p>\r\n          Last Name: {staffInfo.lastName}{' '}\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            value={modifiedDetails.lastName}\r\n            onChange={handleInputChange}\r\n          />\r\n        </p>\r\n        <p>\r\n          Email: {staffInfo.email}{' '}\r\n          {/* Email is not editable in this example */}\r\n        </p>\r\n        <p>\r\n          Service Name: {staffInfo.serviceName}{' '}\r\n          <input\r\n            type=\"text\"\r\n            name=\"serviceName\"\r\n            value={modifiedDetails.serviceName}\r\n            onChange={handleInputChange}\r\n          />\r\n        </p>\r\n\r\n        <button onClick={handleModifyDetails}>Request Change in Details</button>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffPersonalInfo;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC;IACzCc,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACf,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC;IACrDc,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZE,WAAW,EAAE;EACf,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;QACtD,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,aAAa,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAC3CZ,YAAY,CAACW,aAAa,CAAC;;UAE3B;UACAL,kBAAkB,CAAC;YACjBL,SAAS,EAAEU,aAAa,CAACV,SAAS;YAClCC,QAAQ,EAAES,aAAa,CAACT,QAAQ;YAChCE,WAAW,EAAEO,aAAa,CAACP;UAC7B,CAAC,CAAC;QACJ,CAAC,MAAM;UACLS,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEN,QAAQ,CAACO,UAAU,CAAC;QACzE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACE,OAAO,CAAC;MACnE;IACF,CAAC;IAEDT,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAR,KAAK,CAAC,mCAAmC,EAAE;MACzCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBnB,KAAK,EAAEJ,SAAS,CAACI;MACnB,CAAC;IACH,CAAC,CAAC,CACCoB,IAAI,CAAEf,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CACnCW,IAAI,CAAEC,IAAI,IAAK;MACdjC,KAAK,CAACkC,OAAO,CAACD,IAAI,CAACR,OAAO,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CACDU,KAAK,CAAEZ,KAAK,IAAK;MAChBvB,KAAK,CAACuB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvD,CAAC,CAAC;EACN,CAAC;EAGD,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC;IACAzB,kBAAkB,CAAE0B,WAAW,KAAM;MACnC,GAAGA,WAAW;MACd,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEpC,OAAA,CAAAE,SAAA;IAAAqC,QAAA,gBACEvC,OAAA,CAACN,MAAM;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3C,OAAA,CAACJ,SAAS;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACb3C,OAAA;MAAK4C,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC5BvC,OAAA;QAAAuC,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC3C,OAAA;QAAAuC,QAAA,GAAG,cACW,EAAClC,SAAS,CAACE,SAAS,EAAE,GAAG,eACrCP,OAAA;UACE6C,IAAI,EAAC,MAAM;UACXV,IAAI,EAAC,WAAW;UAChBC,KAAK,EAAEzB,eAAe,CAACJ,SAAU;UACjCuC,QAAQ,EAAEb;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACJ3C,OAAA;QAAAuC,QAAA,GAAG,aACU,EAAClC,SAAS,CAACG,QAAQ,EAAE,GAAG,eACnCR,OAAA;UACE6C,IAAI,EAAC,MAAM;UACXV,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEzB,eAAe,CAACH,QAAS;UAChCsC,QAAQ,EAAEb;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACJ3C,OAAA;QAAAuC,QAAA,GAAG,SACM,EAAClC,SAAS,CAACI,KAAK,EAAE,GAAG;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B,CAAC,eACJ3C,OAAA;QAAAuC,QAAA,GAAG,gBACa,EAAClC,SAAS,CAACK,WAAW,EAAE,GAAG,eACzCV,OAAA;UACE6C,IAAI,EAAC,MAAM;UACXV,IAAI,EAAC,aAAa;UAClBC,KAAK,EAAEzB,eAAe,CAACD,WAAY;UACnCoC,QAAQ,EAAEb;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEJ3C,OAAA;QAAQ+C,OAAO,EAAExB,mBAAoB;QAAAgB,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACN3C,OAAA,CAACL,MAAM;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP,CAAC;AAACvC,EAAA,CAlHID,iBAAiB;AAAA6C,EAAA,GAAjB7C,iBAAiB;AAoHvB,eAAeA,iBAAiB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
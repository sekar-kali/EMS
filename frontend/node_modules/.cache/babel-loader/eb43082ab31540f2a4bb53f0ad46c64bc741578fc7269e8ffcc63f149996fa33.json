{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shims\\\\Desktop\\\\EMS\\\\frontend\\\\src\\\\pages\\\\Auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport logoImage from '../../logo.png';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleResetPassword = async () => {\n    try {\n      // Simple password validation using regex\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n      if (!passwordRegex.test(password)) {\n        throw new Error('Password must be at least 8 characters long and include 1 capital letter, 1 small letter, and 1 special character.');\n      }\n      if (password !== confirmPassword) {\n        throw new Error('Passwords do not match');\n      }\n      const token = new URLSearchParams(window.location.search).get('token');\n      const response = await fetch('http://localhost:5000/api/auth/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          newPassword: password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error resetting password');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      console.error('Error resetting password:', error.message);\n      setMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"logo-EMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"EMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to your HR services portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(ResetPassword, \"qt3PhytPuw5RELHGgvSOEvZef4A=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","toast","ToastContainer","logoImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","handleResetPassword","passwordRegex","test","Error","token","URLSearchParams","window","location","search","get","response","fetch","method","headers","body","JSON","stringify","newPassword","ok","data","json","error","console","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shims/Desktop/EMS/frontend/src/pages/Auth/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport logoImage from '../../logo.png';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../auth.css';\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      // Simple password validation using regex\r\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n      if (!passwordRegex.test(password)) {\r\n        throw new Error('Password must be at least 8 characters long and include 1 capital letter, 1 small letter, and 1 special character.');\r\n      }\r\n\r\n      if (password !== confirmPassword) {\r\n        throw new Error('Passwords do not match');\r\n      }\r\n\r\n      const token = new URLSearchParams(window.location.search).get('token');\r\n\r\n      const response = await fetch('http://localhost:5000/api/auth/reset-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token, newPassword: password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error resetting password');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error.message);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"login-container1\">\r\n    <div className=\"logo\">\r\n                      <img src={logoImage} alt=\"logo-EMS\" />\r\n        <p>EMS</p></div>\r\n    <h1>Welcome to your HR services portal</h1>\r\n    </div>\r\n    <div className=\"login-container\">\r\n      <h1>Reset Password</h1>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Confirm Password:</label>\r\n        <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      </div>\r\n      <button onClick={handleResetPassword}>Reset Password</button>\r\n      <div>{message}</div>\r\n      <ToastContainer />\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}